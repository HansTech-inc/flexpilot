{
  "name": "flexpilot",
  "license": "GPL-3.0-or-later",
  "displayName": "flexpilot",
  "publisher": "flexpilot",
  "description": "Open-Source, Native and a True GitHub Copilot Alternative for VS Code",
  "version": "0.0.1",
  "icon": "assets/logo.png",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onFileSystem:web-fs",
    "onLanguageModelChat:copilot",
    "onUri",
    "onStartupFinished"
  ],
  "browser": "./dist/browser/extension.js",
  "main": "./out/extension.js",
  "scripts": {
    "test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js",
    "pretest": "npm run compile-web",
    "postinstall": "node ./build/postinstall.js",
    "vscode:prepublish": "npm run package-web",
    "compile-web": "webpack",
    "watch-web": "webpack --watch",
    "package-web": "webpack --mode production --devtool hidden-source-map",
    "lint": "eslint src --ext ts",
    "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."
  },
  "devDependencies": {
    "@types/assert": "^1.5.10",
    "@types/diff": "^6.0.0",
    "@types/jsdom": "^21.1.7",
    "@types/markdown-it": "^14.1.2",
    "@types/mocha": "^10.0.6",
    "@types/react": "^19.0.2",
    "@types/react-dom": "^19.0.2",
    "@types/turndown": "^5.0.5",
    "@types/webpack-env": "^1.18.4",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "assert": "^2.1.0",
    "eslint": "^8.56.0",
    "json-loader": "^0.5.7",
    "mocha": "^10.2.0",
    "process": "^0.11.10",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4",
    "@types/node": "^20.0.0"
  },
  "dependencies": {
    "@ai-sdk/amazon-bedrock": "^1.0.8",
    "@ai-sdk/anthropic": "^1.0.8",
    "@ai-sdk/azure": "^1.0.18",
    "@ai-sdk/cohere": "^1.0.8",
    "@ai-sdk/google": "^1.0.12",
    "@ai-sdk/groq": "^1.0.11",
    "@ai-sdk/mistral": "^1.0.8",
    "@ai-sdk/openai": "^1.0.11",
    "@mixmark-io/domino": "^2.2.0",
    "@mohankumarelec/openai-compatible": "^0.0.16",
    "ai": "^4.0.23",
    "buffer": "^6.0.3",
    "diff": "^7.0.0",
    "memfs": "^4.15.1",
    "openai": "^4.77.0",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "react": "^18.0.0",
    "react-dom": "^19.0.0",
    "readable-stream": "^4.6.0",
    "turndown": "^7.2.0",
    "turndown-plugin-gfm": "^1.0.2",
    "url": "^0.11.4",
    "util": "^0.12.5",
    "uuid": "^11.0.3",
    "zod": "^3.24.1",
    "puppeteer": "^21.3.8",
    "cheerio": "^1.0.0-rc.12",
    "node-fetch": "^3.3.2",
    "path": "^0.12.7"
  },
  "enabledApiProposals": [
    "activeComment",
    "aiRelatedInformation",
    "aiTextSearchProvider",
    "authLearnMore",
    "authSession",
    "canonicalUriProvider",
    "chatEditing",
    "chatParticipantAdditions",
    "chatParticipantPrivate",
    "chatProvider",
    "chatReferenceBinaryData",
    "chatTab",
    "chatVariableResolver",
    "codeActionAI",
    "codeActionRanges",
    "codiconDecoration",
    "commentReactor",
    "commentReveal",
    "commentThreadApplicability",
    "commentingRangeHint",
    "commentsDraftState",
    "contribAccessibilityHelpContent",
    "contribCommentEditorActionsMenu",
    "contribCommentPeekContext",
    "contribCommentThreadAdditionalMenu",
    "contribCommentsViewThreadMenus",
    "contribDebugCreateConfiguration",
    "contribDiffEditorGutterToolBarMenus",
    "contribEditSessions",
    "contribEditorContentMenu",
    "contribLabelFormatterWorkspaceTooltip",
    "contribMenuBarHome",
    "contribMergeEditorMenus",
    "contribMultiDiffEditorMenus",
    "contribNotebookStaticPreloads",
    "contribRemoteHelp",
    "contribShareMenu",
    "contribSourceControlHistoryItemMenu",
    "contribSourceControlHistoryTitleMenu",
    "contribSourceControlInputBoxMenu",
    "contribSourceControlTitleMenu",
    "contribStatusBarItems",
    "contribViewContainerTitle",
    "contribViewsRemote",
    "contribViewsWelcome",
    "createFileSystemWatcher",
    "customEditorMove",
    "debugVisualization",
    "defaultChatParticipant",
    "diffCommand",
    "diffContentOptions",
    "documentFiltersExclusive",
    "documentPaste",
    "editSessionIdentityProvider",
    "editorHoverVerbosityLevel",
    "editorInsets",
    "embeddings",
    "extensionRuntime",
    "extensionsAny",
    "externalUriOpener",
    "fileSearchProvider",
    "fileSearchProvider2",
    "findFiles2",
    "findTextInFiles",
    "findTextInFiles2",
    "fsChunks",
    "idToken",
    "inlineEdit",
    "interactive",
    "interactiveWindow",
    "ipc",
    "languageModelSystem",
    "languageStatusText",
    "mappedEditsProvider",
    "multiDocumentHighlightProvider",
    "nativeWindowHandle",
    "newSymbolNamesProvider",
    "notebookCellExecution",
    "notebookCellExecutionState",
    "notebookControllerAffinityHidden",
    "notebookDeprecated",
    "notebookExecution",
    "notebookKernelSource",
    "notebookLiveShare",
    "notebookMessaging",
    "notebookMime",
    "notebookReplDocument",
    "notebookVariableProvider",
    "portsAttributes",
    "profileContentHandlers",
    "quickDiffProvider",
    "quickInputButtonLocation",
    "quickPickItemTooltip",
    "quickPickSortByLabel",
    "resolvers",
    "scmActionButton",
    "scmHistoryProvider",
    "scmMultiDiffEditor",
    "scmSelectedProvider",
    "scmTextDocument",
    "scmValidation",
    "shareProvider",
    "speech",
    "tabInputMultiDiff",
    "tabInputTextMerge",
    "taskPresentationGroup",
    "telemetry",
    "terminalCompletionProvider",
    "terminalDataWriteEvent",
    "terminalDimensions",
    "terminalExecuteCommandEvent",
    "terminalQuickFixProvider",
    "terminalSelection",
    "testObserver",
    "testRelatedCode",
    "textEditorDiffInformation",
    "textSearchComplete2",
    "textSearchProvider",
    "textSearchProvider2",
    "timeline",
    "tokenInformation",
    "treeViewActiveItem",
    "treeViewMarkdownMessage",
    "treeViewReveal",
    "tunnelFactory",
    "tunnels",
    "valueSelectionInQuickPick",
    "workspaceTrust",
    "fileComments",
    "inlineCompletionsAdditions",
    "showLocal"
  ],
  "contributes": {
    "languageModels": {
      "vendor": "copilot"
    },
    "menus": {
      "scm/inputBox": [
        {
          "when": "scmProvider == git",
          "command": "flexpilot.git.generateCommitMessage"
        }
      ],
      "view/title": [
        {
          "command": "flexpilot.openSessionHistory",
          "when": "view == flexpilot.chatView || view == flexpilot.editSessionView",
          "group": "navigation@1"
        },
        {
          "command": "flexpilot.openSettings",
          "when": "view == flexpilot.chatView || view == flexpilot.editSessionView",
          "group": "navigation@2"
        },
        {
          "command": "flexpilot.clearSessionHistory",
          "when": "view == flexpilot.sessionHistoryView",
          "group": "navigation@1"
        },
        {
          "command": "flexpilot.exportSessionHistory",
          "when": "view == flexpilot.sessionHistoryView",
          "group": "navigation@2"
        },
        {
          "command": "flexpilot.filterSessionHistory",
          "when": "view == flexpilot.sessionHistoryView",
          "group": "navigation@3"
        }
      ]
    },
    "workbench.panel.chat.view.copilot.title": [
      {
        "command": "flexpilot.openSessionHistory",
        "group": "navigation"
      }
    ],
    "workbench.panel.chat.view.edits.title": [
      {
        "command": "flexpilot.openSessionHistory",
        "group": "navigation"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Flexpilot",
      "properties": {
        "flexpilot.panelChat.showTokenUsage": {
          "type": "boolean",
          "default": false,
          "description": "Whether to show token usage in panel chat."
        },
        "flexpilot.inlineChat.showTokenUsage": {
          "type": "boolean",
          "default": false,
          "description": "Whether to show token usage in inline chat."
        },
        "flexpilot.editingSession.showTokenUsage": {
          "type": "boolean",
          "default": false,
          "description": "Whether to show token usage in editor."
        },
        "flexpilot.terminal.showTokenUsage": {
          "type": "boolean",
          "default": false,
          "description": "Whether to show token usage in terminal."
        }
      }
    },
    "chatParticipants": [
      {
        "id": "flexpilot.agent",
        "name": "FlexPilot Agent",
        "fullName": "FlexPilot Agent Mode",
        "description": "Autonomous AI coding agent that independently explores, plans, and executes complex codebase changes",
        "isDefault": false,
        "locations": [
          "panel",
          "editor",
          "terminal"
        ]
      },
      {
        "id": "flexpilot.panel.default",
        "name": "flexpilot",
        "fullName": "Flexpilot",
        "description": "Ask Flexpilot or type / for commands",
        "isDefault": false,
        "locations": [
          "panel"
        ]
      },
      {
        "id": "flexpilot.editing.session",
        "name": "flexpilot",
        "fullName": "FlexPilot Agent Mode",
        "description": "Autonomous AI coding agent that independently explores, plans, and executes complex codebase changes",
        "isDefault": true,
        "locations": [
          "editing-session"
        ]
      },
      {
        "id": "flexpilot.terminal.session",
        "name": "flexpilot",
        "fullName": "Flexpilot",
        "description": "Craft commands in terminal",
        "isDefault": true,
        "locations": [
          "terminal"
        ]
      },
      {
        "id": "flexpilot.editor.default",
        "name": "flexpilot",
        "fullName": "Flexpilot",
        "description": "Ask Flexpilot or type / for commands",
        "isDefault": true,
        "locations": [
          "editor"
        ],
        "defaultImplicitVariables": [
          "_inlineChatContext",
          "_inlineChatDocument"
        ]
      }
    ],
    "viewsWelcome": [
      {
        "view": "workbench.panel.chat.view.copilot",
        "contents": "$(loading~spin) Please wait while Flexpilot is getting activated",
        "when": "!flexpilot:isLoaded"
      },
      {
        "view": "workbench.panel.chat.view.copilot",
        "contents": "You are not connected to the internet, Please check your connection and try again.\n[Retry Connection](command:flexpilot.checkInternetConnection)",
        "when": "flexpilot:isLoaded && !flexpilot:isNetworkConnected"
      },
      {
        "view": "workbench.panel.chat.view.copilot",
        "contents": "Connect your GitHub Account to use Flexpilot, your AI pair programmer.\n\nThis is just required to personalize the IDE with your GitHub profile and auto-configure GitHub models for free to use instantly.\n\n[Connet your GitHub Account](command:flexpilot.github.signin)",
        "when": "flexpilot:isLoaded && flexpilot:isNetworkConnected && !flexpilot:isLoggedIn"
      },
      {
        "view": "workbench.panel.chat.view.edits",
        "contents": "$(loading~spin) Please wait while Flexpilot is getting activated",
        "when": "!flexpilot:isLoaded"
      },
      {
        "view": "workbench.panel.chat.view.edits",
        "contents": "You are not connected to the internet, Please check your connection and try again.\n[Retry Connection](command:flexpilot.checkInternetConnection)",
        "when": "flexpilot:isLoaded && !flexpilot:isNetworkConnected"
      },
      {
        "view": "workbench.panel.chat.view.edits",
        "contents": "Connect your GitHub Account to use Flexpilot, your AI pair programmer.\n\nThis is just required to personalize the IDE with your GitHub profile and auto-configure GitHub models for free to use instantly.\n\n[Connet your GitHub Account](command:flexpilot.github.signin)",
        "when": "flexpilot:isLoaded && flexpilot:isNetworkConnected && !flexpilot:isLoggedIn"
      }
    ],
    "commands": [
      {
        "command": "flexpilot.git.generateCommitMessage",
        "title": "Generate Commit Message",
        "icon": "$(sparkle)",
        "enablement": "false",
        "category": "Flexpilot"
      },
      {
        "command": "flexpilot.checkInternetConnection",
        "title": "Check Internet Connection",
        "enablement": "false"
      },
      {
        "command": "flexpilot.show.diagnostics",
        "title": "Show Diagnostics",
        "category": "Flexpilot"
      },
      {
        "command": "flexpilot.vfs.info.message",
        "enablement": "false",
        "title": "Flexpilot VFS Info Message"
      },
      {
        "command": "flexpilot.github.signin",
        "title": "Sign In with GitHub"
      },
      {
        "command": "flexpilot.configureModel",
        "title": "Configure the Language Model Provider",
        "category": "Flexpilot",
        "enablement": "flexpilot:isLoggedIn"
      },
      {
        "command": "flexpilot.usagePreferences",
        "title": "Set Model Usage Preferences",
        "category": "Flexpilot",
        "enablement": "flexpilot:isLoggedIn"
      },
      {
        "command": "flexpilot.viewLogs",
        "category": "Flexpilot",
        "title": "View logs from Flexpilot output channel"
      },
      {
        "command": "flexpilot.status.icon.menu",
        "enablement": "false",
        "title": "Status Icon Menu"
      },
      {
        "command": "flexpilot.openSessionHistory",
        "title": "Show Session History",
        "icon": "$(history)"
      },
      {
        "command": "flexpilot.clearSessionHistory",
        "title": "Clear All Session History",
        "category": "Flexpilot"
      },
      {
        "command": "flexpilot.exportSessionHistory",
        "title": "Export Session History",
        "category": "Flexpilot"
      },
      {
        "command": "flexpilot.filterSessionHistory",
        "title": "Filter Session History",
        "category": "Flexpilot"
      },
      {
        "command": "flexpilot.sessionHistoryView.applyFilter",
        "title": "Apply Session History Filter",
        "enablement": "false"
      },
      {
        "command": "flexpilot.openModelManagement",
        "title": "Open Model Management",
        "category": "Flexpilot"
      },
      {
        "command": "flexpilot.openSettings",
        "title": "AI Settings",
        "icon": "$(gear)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "flexpilot-model-management",
          "title": "Model Management",
          "icon": "$(settings-gear)"
        },
        {
          "id": "flexpilot-session-history",
          "title": "Session History",
          "icon": "$(history)"
        }
      ]
    },
    "views": {
      "flexpilot-model-management": [
        {
          "type": "webview",
          "id": "flexpilot.modelManagement",
          "name": "Model Management"
        }
      ],
      "flexpilot-session-history": [
        {
          "type": "webview",
          "id": "flexpilot.sessionHistoryView",
          "name": "Session History"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "flexpilot-getting-started",
        "title": "Getting Started with Flexpilot",
        "description": "Onboard and set up Flexpilot for the best experience.",
        "steps": [
          {
            "id": "flexpilot-welcome-step",
            "title": "Welcome to Flexpilot!",
            "description": "👋 Hi, I'm <b>Hans Ade</b>, <b>CEO & Founder</b> (<a href='mailto:hanscadx8@gmail.com'>hanscadx8@gmail.com</a>).\n\nThank you for choosing Flexpilot, your open-source AI pair programmer. I'm excited to have you on board—let's build something amazing together!",
            "media": {
              "image": "https://cdn.jsdelivr.net/gh/twitter/twemoji@14.0.2/assets/72x72/1f44b.png",
              "altText": "Waving Hand"
            }
          },
          {
            "id": "flexpilot-signin-step",
            "title": "Sign in with GitHub",
            "description": "To use Flexpilot, please sign in with your GitHub account. This is required for personalization and free model access.",
            "button": {
              "title": "Sign in with GitHub",
              "command": "flexpilot.github.signin"
            },
            "media": {
              "image": "https://cdn.jsdelivr.net/gh/twitter/twemoji@14.0.2/assets/72x72/1f5c3.png",
              "altText": "GitHub Folder"
            }
          },
          {
            "id": "flexpilot-import-settings-step",
            "title": "Import VS Code Settings & Keybindings",
            "description": "To ensure Flexpilot works seamlessly (especially for terminal and environment issues), we recommend importing all your VS Code settings and keybindings.\n\nThis helps resolve terminal launch issues and ensures your shortcuts and preferences are instantly available.",
            "button": {
              "title": "Import Settings Now",
              "command": "workbench.action.importSettings"
            },
            "media": {
              "image": "https://cdn.jsdelivr.net/gh/twitter/twemoji@14.0.2/assets/72x72/1f4e6.png",
              "altText": "Import Settings"
            }
          },
          {
            "id": "flexpilot-import-settings-auto-step",
            "title": "Auto-Import VS Code Settings (Recommended)",
            "description": "Instantly import your settings from your local VS Code installation—no file selection needed!\n\nThis is the fastest way to make Flexpilot IDE match your VS Code environment and resolve terminal or environment issues.",
            "button": {
              "title": "Auto-Import from VS Code",
              "command": "flexpilot.importVSCodeSettingsAuto"
            },
            "media": {
              "image": "https://cdn.jsdelivr.net/gh/twitter/twemoji@14.0.2/assets/72x72/1f680.png",
              "altText": "Rocket Import"
            }
          }
        ]
      }
    ],
    "themes": [
      {
        "label": "One Monokai",
        "uiTheme": "vs-dark",
        "path": "./themes/OneMonokai-color-theme.json"
      },
      {
        "label": "Monokai Light",
        "uiTheme": "vs",
        "path": "./themes/monokai-color-theme.json"
      }
    ]
  }
}
